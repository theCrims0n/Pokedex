{"ast":null,"code":"import axios from 'axios';\nimport { create } from 'zustand';\nexport const usePokemonStore = create(set => ({\n  isLoading: false,\n  pokemon: [],\n  pokemons: [],\n  keypress: '',\n  getPokemon: async () => {\n    set({\n      isLoading: false\n    });\n    const result = await axios.get('http://localhost:3001/api/pokemon');\n    if (result.status != 200) {\n      set({\n        isLoading: false,\n        pokemons: []\n      });\n      return;\n    }\n    set({\n      isLoading: false,\n      pokemons: result.data.body.results\n    });\n  },\n  getPokemonKeyPress: async press => {\n    set({\n      keypress: press\n    });\n  },\n  getPokemonByName: async nombre => {\n    set({\n      isLoading: false\n    });\n    const result = await axios.get(`http://localhost:3001/api/pokemon/${nombre}`);\n    if (result.status != 200) {\n      set({\n        isLoading: false,\n        pokemons: []\n      });\n      return;\n    }\n    set({\n      isLoading: false,\n      pokemons: result.data.body.results\n    });\n  },\n  getPokemonByLimitPage: async (limit, offset) => {}\n}));","map":{"version":3,"names":["axios","create","usePokemonStore","set","isLoading","pokemon","pokemons","keypress","getPokemon","result","get","status","data","body","results","getPokemonKeyPress","press","getPokemonByName","nombre","getPokemonByLimitPage","limit","offset"],"sources":["C:/Users/broad/OneDrive/Documentos/FULLSTACK-TEST/pokedex/client/src/store/pokemon/pokemon-store.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { create } from 'zustand'\r\n\r\ninterface State {\r\n    isLoading: boolean;\r\n    pokemon: Array<any>;\r\n    pokemons: Array<any>\r\n    keypress: string;\r\n    getPokemon: () => void;\r\n    getPokemonKeyPress: (press: string) => void;\r\n    getPokemonByName: (nombre: string) => void;\r\n    getPokemonByLimitPage: (limit: number, offset: number) => void;\r\n}\r\n\r\nexport const usePokemonStore = create<State>((set) => ({\r\n\r\n    isLoading: false,\r\n    pokemon: [],\r\n    pokemons: [],\r\n    keypress: '',\r\n    getPokemon: async () => {\r\n        set({ isLoading: false })\r\n        const result = await axios.get('http://localhost:3001/api/pokemon');\r\n        if (result.status != 200) {\r\n            set({ isLoading: false, pokemons: [] })\r\n            return\r\n        }\r\n        set({ isLoading: false, pokemons: result.data.body.results })\r\n    },\r\n    getPokemonKeyPress: async (press) => {\r\n\r\n        set({ keypress: press })\r\n\r\n    },\r\n    getPokemonByName: async (nombre) => {\r\n        set({ isLoading: false })\r\n        const result = await axios.get(`http://localhost:3001/api/pokemon/${nombre}`);\r\n        if (result.status != 200) {\r\n            set({ isLoading: false, pokemons: [] })\r\n            return\r\n        }\r\n        set({ isLoading: false, pokemons: result.data.body.results })\r\n    },\r\n    getPokemonByLimitPage: async (limit, offset) => {\r\n\r\n    }\r\n}))\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,SAAS;AAahC,OAAO,MAAMC,eAAe,GAAGD,MAAM,CAASE,GAAG,KAAM;EAEnDC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACpBL,GAAG,CAAC;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC;IACzB,MAAMK,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,mCAAmC,CAAC;IACnE,IAAID,MAAM,CAACE,MAAM,IAAI,GAAG,EAAE;MACtBR,GAAG,CAAC;QAAEC,SAAS,EAAE,KAAK;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC;MACvC;IACJ;IACAH,GAAG,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEE,QAAQ,EAAEG,MAAM,CAACG,IAAI,CAACC,IAAI,CAACC;IAAQ,CAAC,CAAC;EACjE,CAAC;EACDC,kBAAkB,EAAE,MAAOC,KAAK,IAAK;IAEjCb,GAAG,CAAC;MAAEI,QAAQ,EAAES;IAAM,CAAC,CAAC;EAE5B,CAAC;EACDC,gBAAgB,EAAE,MAAOC,MAAM,IAAK;IAChCf,GAAG,CAAC;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC;IACzB,MAAMK,MAAM,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,qCAAqCQ,MAAM,EAAE,CAAC;IAC7E,IAAIT,MAAM,CAACE,MAAM,IAAI,GAAG,EAAE;MACtBR,GAAG,CAAC;QAAEC,SAAS,EAAE,KAAK;QAAEE,QAAQ,EAAE;MAAG,CAAC,CAAC;MACvC;IACJ;IACAH,GAAG,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEE,QAAQ,EAAEG,MAAM,CAACG,IAAI,CAACC,IAAI,CAACC;IAAQ,CAAC,CAAC;EACjE,CAAC;EACDK,qBAAqB,EAAE,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK,CAEhD;AACJ,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}